/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.accenture.view;

import com.accenture.control.ManipulaDadosSQLite;
import com.accenture.bean.Plano;
import com.accenture.bean.Step;
import com.accenture.bean.StepPadrao;

import com.accenture.util.TextAreaCellEditor;
import com.accenture.util.TextAreaCellRenderer;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author raphael.da.silva
 */
public class ChooseStepScreenView extends java.awt.Dialog {

    private ManipulaDadosSQLite banco = new ManipulaDadosSQLite();
    private RegisterScreenTIView gUICadCT;
    private EditTestCaseScreenTIView gUIMantemCT;

    /**
     * Creates new form GUISelecionaStep
     */
    public ChooseStepScreenView(java.awt.Frame parent, boolean modal) throws IOException, ClassNotFoundException, SQLException {
        super(parent, modal);

        initComponents();
        pack();
        tabelaSelecioneStepPadrao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        new SwingWorker() {
            JDialog aguarde;
            final Frame GUIPrincipal = new MainScreenView();
            {
                this.aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);
            }
            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);
                atualizaTabelaStepPadrao();
                return null;
            }

            @Override
            protected void done() {
                aguarde.dispose();
            }

        }.execute();
    }
    
    public ChooseStepScreenView(final RegisterScreenTIView gUICadCT, java.awt.Frame parent, boolean modal) throws IOException, ClassNotFoundException, SQLException {
        super(parent, modal);

        initComponents();
        pack();
        tabelaSelecioneStepPadrao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.gUICadCT = gUICadCT;
        new SwingWorker() {
            JDialog aguarde;
            final Frame GUIPrincipal = new MainScreenView();
            {
                this.aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);
            }
            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);
                atualizaTabelaStepPadrao();
                return null;
            }

            @Override
            protected void done() {
                aguarde.dispose();
            }

        }.execute();
    }
    
    public ChooseStepScreenView(final EditTestCaseScreenTIView guiManterCT, java.awt.Frame parent, boolean modal) throws IOException, ClassNotFoundException, SQLException {
        super(parent, modal);

        initComponents();
        pack();
        tabelaSelecioneStepPadrao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.gUIMantemCT = guiManterCT;
        new SwingWorker() {
            JDialog aguarde;
            final Frame GUIPrincipal = new MainScreenView();
            {
                this.aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);
            }
            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);
                atualizaTabelaStepPadrao();
                return null;
            }

            @Override
            protected void done() {
                aguarde.dispose();
            }

        }.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        textPesquisaStepPadrao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaSelecioneStepPadrao = new javax.swing.JTable();
        bntSelecionar = new javax.swing.JButton();
        bntCancelar = new javax.swing.JButton();
        labelVersao = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Selecione o CT que deseja copiar");

        jLabel3.setText("FIltro:");

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Selecione o Step que deseja copiar");

        textPesquisaStepPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPesquisaStepPadraoActionPerformed(evt);
            }
        });
        textPesquisaStepPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textPesquisaStepPadraoKeyPressed(evt);
            }
        });

        tabelaSelecioneStepPadrao.addMouseMotionListener(new MouseMotionAdapter(){
            public void mouseMoved(MouseEvent e){
                Point p = e.getPoint();
                int row = tabelaSelecioneStepPadrao.rowAtPoint(p);
                int column = tabelaSelecioneStepPadrao.columnAtPoint(p);
                tabelaSelecioneStepPadrao.setToolTipText(String.valueOf(tabelaSelecioneStepPadrao.getValueAt(row,column)));
            }//end MouseMoved
        });
        tabelaSelecioneStepPadrao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição", "Resultado Esperado", "Tipo", "Sistema"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaSelecioneStepPadrao.setColumnSelectionAllowed(true);
        tabelaSelecioneStepPadrao.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaSelecioneStepPadrao);
        tabelaSelecioneStepPadrao.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tabelaSelecioneStepPadrao.getColumnModel().getColumnCount() > 0) {
            tabelaSelecioneStepPadrao.getColumnModel().getColumn(0).setResizable(false);
            tabelaSelecioneStepPadrao.getColumnModel().getColumn(1).setResizable(false);
            tabelaSelecioneStepPadrao.getColumnModel().getColumn(1).setCellEditor(new TextAreaCellEditor());
            tabelaSelecioneStepPadrao.getColumnModel().getColumn(2).setResizable(false);
            tabelaSelecioneStepPadrao.getColumnModel().getColumn(3).setResizable(false);
        }
        TableColumn col;
        for (int i = 0; i < tabelaSelecioneStepPadrao.getColumnCount(); i++) {
            col = tabelaSelecioneStepPadrao.getColumnModel().getColumn(i);
            col.setCellRenderer(new TextAreaCellRenderer());
        }
        ordenatabela();

        bntSelecionar.setText("Adicionar");
        bntSelecionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntSelecionarMouseClicked(evt);
            }
        });

        bntCancelar.setText("Cancelar");
        bntCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntCancelarMouseClicked(evt);
            }
        });

        labelVersao.setText("Versão da carga: ");

        jLabel4.setText("FIltro:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(bntSelecionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(bntCancelar)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textPesquisaStepPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(labelVersao)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPesquisaStepPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntCancelar)
                    .addComponent(bntSelecionar))
                .addGap(11, 11, 11)
                .addComponent(labelVersao))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void textPesquisaStepPadraoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPesquisaStepPadraoKeyPressed
       
    }//GEN-LAST:event_textPesquisaStepPadraoKeyPressed

    private void bntCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntCancelarMouseClicked
        this.dispose();
    }//GEN-LAST:event_bntCancelarMouseClicked

    private void bntSelecionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntSelecionarMouseClicked
        new SwingWorker() {
            DefaultTableModel tabelaCT = (DefaultTableModel) tabelaSelecioneStepPadrao.getModel();
            JDialog aguarde;
            final Frame GUIPrincipal = new MainScreenView();
            {
                this.aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);
            }

            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);
                if (tabelaSelecioneStepPadrao.getSelectedRowCount() == 0) {
                    aguarde.setVisible(false);
                    JOptionPane.showMessageDialog(null, "Favor selecione um CT", "Informação", JOptionPane.INFORMATION_MESSAGE);
                } else {

                    System.out.println(tabelaSelecioneStepPadrao.getValueAt(tabelaSelecioneStepPadrao.getSelectedRow(), 0));
                   
                   
                    
                    if(gUICadCT != null){
                        adicionaStepPadraoTelaCadastro();
                    }
                    if(gUIMantemCT != null){
                        adicionaStepPadraoTelaEditar();
                    }
                    
                }
                return null;
            }

                @Override
                protected void done(){
                    aguarde.dispose();
                }
                
                
            
        }.execute();
    }//GEN-LAST:event_bntSelecionarMouseClicked

    private void textPesquisaStepPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPesquisaStepPadraoActionPerformed
         //Realiza pesquisa na tabela
        DefaultTableModel tabelaCT = (DefaultTableModel) tabelaSelecioneStepPadrao.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabelaCT);
        tabelaSelecioneStepPadrao.setRowSorter(sorter);
        String busca = textPesquisaStepPadrao.getText();
        if (busca.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter(busca, 0));
            } catch (PatternSyntaxException pse) {
                System.err.println("Erro");
            }
        }
    }//GEN-LAST:event_textPesquisaStepPadraoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChooseStepScreenView dialog = null;
                try {
                    dialog = new ChooseStepScreenView(new java.awt.Frame(), true);
                } catch (IOException ex) {
                    Logger.getLogger(ChooseStepScreenView.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ChooseStepScreenView.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(ChooseStepScreenView.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCancelar;
    private javax.swing.JButton bntSelecionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelVersao;
    private javax.swing.JTable tabelaSelecioneStepPadrao;
    private javax.swing.JTextField textPesquisaStepPadrao;
    // End of variables declaration//GEN-END:variables
public void centralizaJanela(RegisterScreenTIView tela) {
        Dimension d = tela.getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

public void centralizaJanela(EditTestCaseScreenTIView tela) {
        Dimension d = tela.getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void atualizaTabelaStepPadrao() {
        DefaultTableModel model = (DefaultTableModel) tabelaSelecioneStepPadrao.getModel();
        if (model.getRowCount() != 0) {
            int numLinhas = model.getRowCount();
            for (int i = 0; i <= model.getRowCount(); i++) {
                //                model.removeRow(0);
                model.setRowCount(0);
            }
        }
        
        try {

            //Adiciona os casos de teste na tabela caso de teste
            List<StepPadrao> listStep = banco.getAllStepPadrao();

            int tamanho = listStep.size();
            int idTemp = 0;
            for (int cont = 0; cont < tamanho; cont++) {

                if (idTemp != listStep.get(cont).getId()) {
                    model.addRow(new String[]{listStep.get(cont).getDescStep(), listStep.get(cont).getResultadoStep(),  listStep.get(cont).getTipoStepPadrao(), listStep.get(cont).getSistema()});
                    labelVersao.setText("Versão da carga: "+ listStep.get(cont).getVersao());
                }
                idTemp = listStep.get(cont).getId();

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu o erro: " + ex.getMessage() , "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu o erro: " + ex.getMessage() , "Erro", JOptionPane.ERROR_MESSAGE);
        }

        }
    
    
        
    
    
        public void adicionaStepPadraoTelaCadastro(){
            List<Step> stepList = new ArrayList<Step>();
            Step s  = new Step();
            
            s.setDescStep(tabelaSelecioneStepPadrao.getValueAt(tabelaSelecioneStepPadrao.getSelectedRow(), 0).toString());
            s.setResultadoStep(tabelaSelecioneStepPadrao.getValueAt(tabelaSelecioneStepPadrao.getSelectedRow(), 1).toString());
            
            stepList.add(s);
            
            gUICadCT.setTabelaSteps(stepList);
//            gUICadCT.setValorTextSubject("teste");
        }
        
        public void adicionaStepPadraoTelaEditar(){
            List<Step> stepList = new ArrayList<Step>();
            Step s  = new Step();
            
            s.setDescStep(tabelaSelecioneStepPadrao.getValueAt(tabelaSelecioneStepPadrao.getSelectedRow(), 0).toString());
            s.setResultadoStep(tabelaSelecioneStepPadrao.getValueAt(tabelaSelecioneStepPadrao.getSelectedRow(), 1).toString());
            
            stepList.add(s);
            
            gUIMantemCT.setTabelaSteps(stepList);
//            gUICadCT.setValorTextSubject("teste");
        }
        
        public void ordenatabela(){
            DefaultTableModel model = (DefaultTableModel) tabelaSelecioneStepPadrao.getModel();
            RowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            tabelaSelecioneStepPadrao.setRowSorter(sorter);
        }
    }
