/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.accenture.view;

import com.accenture.bean.SVNPropertiesVOBean;
import com.accenture.control.ManipulaDadosSQLite;
import com.accenture.bean.UsuarioALM;
import com.accenture.ts.rn.SettingsArquivesTiRN;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Frame;
import static java.awt.SystemColor.desktop;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.tmatesoft.svn.core.SVNException;

/**
 *
 * @author Raphael
 */
public class SettingsScreenView extends javax.swing.JInternalFrame {

    private ManipulaDadosSQLite bd = new ManipulaDadosSQLite();
    private SVNPropertiesVOBean svnProperties = SVNPropertiesVOBean.getInstance();
    private MainScreenView desktop;
    private String fase;

    /**
     * Creates new form GUIConfiguracoes
     */
    public SettingsScreenView(String fase) throws SQLException, ClassNotFoundException, IOException {
        initComponents();
        this.fase = fase;
        carregaCamposObrigatorios();
        carregaCamposDb();
        //carregaCamposALM();
        carregaCamposSvn();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        checkNomeCT = new javax.swing.JCheckBox();
        checkCenario = new javax.swing.JCheckBox();
        checkFuncionalidade = new javax.swing.JCheckBox();
        checkSistemaMaster = new javax.swing.JCheckBox();
        checkSistemaEnvolvidos = new javax.swing.JCheckBox();
        checkFornecedor = new javax.swing.JCheckBox();
        checkTipoRequisito = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        checkRequisito = new javax.swing.JCheckBox();
        checkCriacao = new javax.swing.JCheckBox();
        checkCadeia = new javax.swing.JCheckBox();
        checkSegmento = new javax.swing.JCheckBox();
        checkCenarioIntegrado = new javax.swing.JCheckBox();
        checkCenarioAuto = new javax.swing.JCheckBox();
        checkType = new javax.swing.JCheckBox();
        checkTrg = new javax.swing.JCheckBox();
        checkSubject = new javax.swing.JCheckBox();
        checkDescricao = new javax.swing.JCheckBox();
        checkQtdSistemas = new javax.swing.JCheckBox();
        checkProduto = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        bntSalsar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textUsuarioDB = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textSenhaDB = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        textUsuarioSvn = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textSenhaSvn = new javax.swing.JPasswordField();
        jSeparator4 = new javax.swing.JSeparator();
        textUrlSvn = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textDirSvn = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaSistemaSvn = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        bntUpdateSettings = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Configurações");
        setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 650));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel1.setText("Os campos marcados serão obrigatórios na tela de cadastro e edição de CTs");

        checkNomeCT.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        checkNomeCT.setSelected(true);
        checkNomeCT.setText("NOME CT");
        checkNomeCT.setEnabled(false);

        checkCenario.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        checkCenario.setText("CENÁRIO");
        checkCenario.setEnabled(false);

        checkFuncionalidade.setText("FUNCIONALIDADE/SERVIÇO");
        checkFuncionalidade.setEnabled(false);

        checkSistemaMaster.setText("SISTEMA MASTER");
        checkSistemaMaster.setEnabled(false);

        checkSistemaEnvolvidos.setText("SISTEMAS ENVOLVIDOS");
        checkSistemaEnvolvidos.setEnabled(false);

        checkFornecedor.setText("FORNECEDOR");
        checkFornecedor.setEnabled(false);

        checkTipoRequisito.setText("TIPO REQUISITO");
        checkTipoRequisito.setEnabled(false);
        checkTipoRequisito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTipoRequisitoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel2.setText("Campos Obrigatórios");

        checkRequisito.setText("REQUISITO");
        checkRequisito.setEnabled(false);

        checkCriacao.setText("CRIAÇÃO/ALTERAÇÃO");
        checkCriacao.setEnabled(false);

        checkCadeia.setText("CADEIA");
        checkCadeia.setEnabled(false);

        checkSegmento.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        checkSegmento.setText("SEGMENTO");
        checkSegmento.setEnabled(false);
        checkSegmento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSegmentoActionPerformed(evt);
            }
        });

        checkCenarioIntegrado.setText("CENÁRIO INTEGRADO");
        checkCenarioIntegrado.setEnabled(false);
        checkCenarioIntegrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCenarioIntegradoActionPerformed(evt);
            }
        });

        checkCenarioAuto.setText("CENÁRIO AUTOMATIZÁVEL");
        checkCenarioAuto.setEnabled(false);
        checkCenarioAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCenarioAutoActionPerformed(evt);
            }
        });

        checkType.setText("TYPE");
        checkType.setEnabled(false);

        checkTrg.setText("TRG");
        checkTrg.setEnabled(false);

        checkSubject.setText("SUBJECT");
        checkSubject.setEnabled(false);

        checkDescricao.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        checkDescricao.setText("DESCRIÇÃO");
        checkDescricao.setEnabled(false);

        checkQtdSistemas.setText("QTD SISTEMAS");
        checkQtdSistemas.setEnabled(false);

        checkProduto.setText("PRODUTO");
        checkProduto.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel3.setText("BANCO");

        bntSalsar.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        bntSalsar.setIcon(new javax.swing.ImageIcon("C:\\FastPlan\\res\\Icones 2.0\\22x22\\save_all.png")); // NOI18N
        bntSalsar.setText("Salvar Alterações");
        bntSalsar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntSalsarMouseClicked(evt);
            }
        });
        bntSalsar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalsarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel4.setText("Usuário: ");

        textUsuarioDB.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel5.setText("Senha:");

        textSenhaDB.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel6.setText("SVN");

        jLabel7.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel7.setText("Usuário: ");

        textUsuarioSvn.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel8.setText("Senha:");

        textUrlSvn.setEditable(false);
        textUrlSvn.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Graphik", 0, 10)); // NOI18N
        jLabel9.setText("Ex.: http://10.20.136.198:2402/svn/Oi.TSS");

        jLabel10.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel10.setText("Url Svn:");

        jLabel11.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel11.setText("Diretório CTs");

        textDirSvn.setEditable(false);
        textDirSvn.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N

        jLabel12.setText("Ex.: branches/xxxxxxx");

        textAreaSistemaSvn.setEditable(false);
        textAreaSistemaSvn.setColumns(20);
        textAreaSistemaSvn.setRows(5);
        jScrollPane1.setViewportView(textAreaSistemaSvn);

        jLabel13.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel13.setText("Sistemas:");

        jLabel14.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        jLabel14.setText("Ex.: (BLL|ARBOR)");

        bntUpdateSettings.setFont(new java.awt.Font("Graphik", 0, 12)); // NOI18N
        bntUpdateSettings.setIcon(new javax.swing.ImageIcon("C:\\FastPlan\\res\\Icones 2.0\\22x22\\reload.png")); // NOI18N
        bntUpdateSettings.setText("Atualizar Configurações");
        bntUpdateSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntUpdateSettingsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jSeparator2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator4)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bntUpdateSettings)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bntSalsar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 1169, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(checkNomeCT)
                                        .addGap(42, 42, 42)
                                        .addComponent(checkCenario))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(checkQtdSistemas)
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkFornecedor)
                                            .addComponent(checkSistemaMaster)))
                                    .addComponent(checkCadeia))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkSegmento)
                                            .addComponent(checkRequisito))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkSistemaEnvolvidos)
                                            .addComponent(checkCenarioAuto))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkDescricao)
                                            .addComponent(checkType))
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkFuncionalidade)
                                            .addComponent(checkProduto))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkSubject)
                                            .addComponent(checkTipoRequisito))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkCriacao)
                                            .addComponent(checkCenarioIntegrado)))
                                    .addComponent(checkTrg)))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(textSenhaDB, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                                                    .addComponent(textUsuarioDB)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(textDirSvn, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel13))
                                                    .addComponent(jLabel12))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel14)
                                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textUsuarioSvn, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textSenhaSvn, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textUrlSvn, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))))))
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntUpdateSettings)
                            .addComponent(bntSalsar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkNomeCT)
                    .addComponent(checkCenario)
                    .addComponent(checkSegmento)
                    .addComponent(checkCenarioAuto)
                    .addComponent(checkDescricao)
                    .addComponent(checkFuncionalidade)
                    .addComponent(checkTipoRequisito)
                    .addComponent(checkCenarioIntegrado))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkQtdSistemas)
                            .addComponent(checkSistemaMaster)
                            .addComponent(checkRequisito)
                            .addComponent(checkSistemaEnvolvidos)
                            .addComponent(checkType)
                            .addComponent(checkProduto)
                            .addComponent(checkSubject))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkCadeia)
                            .addComponent(checkFornecedor)
                            .addComponent(checkTrg)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkCriacao)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textUsuarioDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textSenhaDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(textUsuarioSvn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(textSenhaSvn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textUrlSvn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDirSvn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkSegmentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSegmentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkSegmentoActionPerformed

    private void checkCenarioIntegradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCenarioIntegradoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkCenarioIntegradoActionPerformed

    private void checkCenarioAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCenarioAutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkCenarioAutoActionPerformed

    private void bntSalsarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntSalsarMouseClicked
        final Frame GUIPrincipal = new MainScreenView();

        new SwingWorker() {
            JDialog aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);

            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);
                if (atualizaUsuarioALM() && atualizaDadosSvn() && atualizaDadosDb()) {

                    JOptionPane.showMessageDialog(null, "Alterações salvas com sucesso! ", "Configurações", JOptionPane.INFORMATION_MESSAGE);
                };
                return null;
            }

            @Override
            protected void done() {
                aguarde.dispose();
            }

        }.execute();


    }//GEN-LAST:event_bntSalsarMouseClicked

    private void bntUpdateSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntUpdateSettingsActionPerformed
        try {
            // TODO add your handling code here:
            getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            SettingsArquivesTiRN settings = new SettingsArquivesTiRN(this.fase);
            settings.updateSettingsRN(this.fase);
            carregaCamposSvn();
            UpdateFieldsMap(settings.getSettings().getSettings().getMandatoryFields());

            getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

            SettingsScreenView guiConfiguracoes = new SettingsScreenView(this.fase);

            getDesktopPane().add(guiConfiguracoes);
            guiConfiguracoes.centralizaJanela();
            guiConfiguracoes.setVisible(true);

            dispose();
        } catch (IOException ex) {
            getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (SVNException ex) {
            getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(SettingsScreenView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SettingsScreenView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bntUpdateSettingsActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:


    }//GEN-LAST:event_formInternalFrameClosing

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formInternalFrameClosed

    private void bntSalsarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalsarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bntSalsarActionPerformed

    private void checkTipoRequisitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTipoRequisitoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkTipoRequisitoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSalsar;
    private javax.swing.JButton bntUpdateSettings;
    private javax.swing.JCheckBox checkCadeia;
    private javax.swing.JCheckBox checkCenario;
    private javax.swing.JCheckBox checkCenarioAuto;
    private javax.swing.JCheckBox checkCenarioIntegrado;
    private javax.swing.JCheckBox checkCriacao;
    private javax.swing.JCheckBox checkDescricao;
    private javax.swing.JCheckBox checkFornecedor;
    private javax.swing.JCheckBox checkFuncionalidade;
    private javax.swing.JCheckBox checkNomeCT;
    private javax.swing.JCheckBox checkProduto;
    private javax.swing.JCheckBox checkQtdSistemas;
    private javax.swing.JCheckBox checkRequisito;
    private javax.swing.JCheckBox checkSegmento;
    private javax.swing.JCheckBox checkSistemaEnvolvidos;
    private javax.swing.JCheckBox checkSistemaMaster;
    private javax.swing.JCheckBox checkSubject;
    private javax.swing.JCheckBox checkTipoRequisito;
    private javax.swing.JCheckBox checkTrg;
    private javax.swing.JCheckBox checkType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea textAreaSistemaSvn;
    private javax.swing.JTextField textDirSvn;
    private javax.swing.JPasswordField textSenhaDB;
    private javax.swing.JPasswordField textSenhaSvn;
    private javax.swing.JTextField textUrlSvn;
    private javax.swing.JTextField textUsuarioDB;
    private javax.swing.JTextField textUsuarioSvn;
    // End of variables declaration//GEN-END:variables
public void centralizaJanela() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void carregaCamposObrigatorios() {
        List<String> listCampos = new ArrayList<String>();
        try {
            listCampos = bd.getCamposObrigatorios();

            for (int i = 0; i < listCampos.size(); i++) {

                switch (listCampos.get(i)) {
                    case "CASO_TESTE":
                        checkNomeCT.setSelected(true);
                        break;

                    case "FUNCIONALIDADE_SERVICO":
                        checkFuncionalidade.setSelected(true);
                        break;

                    case "SISTEMA_MASTER":
                        checkSistemaMaster.setSelected(true);
                        break;

                    case "SISTEMAS_ENVOLVIDOS":
                        checkSistemaEnvolvidos.setSelected(true);
                        break;

                    case "FORNECEDOR":
                        checkFornecedor.setSelected(true);
                        break;

                    case "CENARIO_TESTE":
                        checkCenario.setSelected(true);
                        break;

                    case "TP_REQUISITO":
                        checkTipoRequisito.setSelected(true);
                        break;

                    case "REQUISITO":
                        checkRequisito.setSelected(true);
                        break;

                    case "CRIACAO_ALTERACAO":
                        checkCriacao.setSelected(true);
                        break;

                    case "CADEIA":
                        checkCadeia.setSelected(true);
                        break;

                    case "SEGMENTO":
                        checkSegmento.setSelected(true);
                        break;

                    case "CENARIO_INTEGRADO":
                        checkCenarioIntegrado.setSelected(true);
                        break;

                    case "CENARIO_AUTOMATIZAVEL":
                        checkCenarioAuto.setSelected(true);
                        break;

                    case "TP_TYPE":
                        checkType.setSelected(true);
                        break;

                    case "TRG":
                        checkTrg.setSelected(true);
                        break;

                    case "DESCRICAO_CASO_TESTE":
                        checkDescricao.setSelected(true);
                        break;

                    case "QTD_SISTEMAS":
                        checkQtdSistemas.setSelected(true);
                        break;

                    case "PRODUTO":
                        checkProduto.setSelected(true);
                        break;

                    case "SUBJECT":
                        checkSubject.setSelected(true);
                        break;

                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + ex.getMessage() + ex.getLocalizedMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    public boolean atualizaCampos() {
        int valor;
        try {
            bd.atualizaCamposObrigatorios("CASO_TESTE", valor = (checkNomeCT.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("FUNCIONALIDADE_SERVICO", valor = (checkFuncionalidade.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("SISTEMA_MASTER", valor = (checkSistemaMaster.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("SISTEMAS_ENVOLVIDOS", valor = (checkSistemaEnvolvidos.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("FORNECEDOR", valor = (checkFornecedor.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("CENARIO_TESTE", valor = (checkCenario.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("TP_REQUISITO", valor = (checkTipoRequisito.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("REQUISITO", valor = (checkRequisito.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("CRIACAO_ALTERACAO", valor = (checkCriacao.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("CADEIA", valor = (checkCadeia.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("SEGMENTO", valor = (checkSegmento.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("CENARIO_INTEGRADO", valor = (checkCenarioIntegrado.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("CENARIO_AUTOMATIZAVEL", valor = (checkCenarioAuto.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("TP_TYPE", valor = (checkType.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("TRG", valor = (checkTrg.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("DESCRICAO_CASO_TESTE", valor = (checkDescricao.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("QTD_SISTEMAS", valor = (checkQtdSistemas.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("PRODUTO", valor = (checkProduto.isSelected()) ? 1 : 0);
            bd.atualizaCamposObrigatorios("SUBJECT", valor = (checkSubject.isSelected()) ? 1 : 0);
            return true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + ex.getMessage() + ex.getLocalizedMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

    }

    public boolean UpdateFieldsMap(Map mapField) {

        try {
            bd.atualizaCamposObrigatorios("CASO_TESTE", Integer.parseInt(mapField.get("CASO_TESTE").toString()));
            bd.atualizaCamposObrigatorios("FUNCIONALIDADE_SERVICO", Integer.parseInt(mapField.get("FUNCIONALIDADE_SERVICO").toString()));
            bd.atualizaCamposObrigatorios("SISTEMA_MASTER", Integer.parseInt(mapField.get("SISTEMA_MASTER").toString()));
            bd.atualizaCamposObrigatorios("SISTEMAS_ENVOLVIDOS", Integer.parseInt(mapField.get("SISTEMAS_ENVOLVIDOS").toString()));
            bd.atualizaCamposObrigatorios("FORNECEDOR", Integer.parseInt(mapField.get("FORNECEDOR").toString()));
            bd.atualizaCamposObrigatorios("CENARIO_TESTE", Integer.parseInt(mapField.get("CENARIO_TESTE").toString()));
            bd.atualizaCamposObrigatorios("TP_REQUISITO", Integer.parseInt(mapField.get("TP_REQUISITO").toString()));
            bd.atualizaCamposObrigatorios("REQUISITO", Integer.parseInt(mapField.get("REQUISITO").toString()));
            bd.atualizaCamposObrigatorios("CRIACAO_ALTERACAO", Integer.parseInt(mapField.get("CRIACAO_ALTERACAO").toString()));
            bd.atualizaCamposObrigatorios("CADEIA", Integer.parseInt(mapField.get("CADEIA").toString()));
            bd.atualizaCamposObrigatorios("SEGMENTO", Integer.parseInt(mapField.get("SEGMENTO").toString()));
            bd.atualizaCamposObrigatorios("CENARIO_INTEGRADO", Integer.parseInt(mapField.get("CENARIO_INTEGRADO").toString()));
            bd.atualizaCamposObrigatorios("CENARIO_AUTOMATIZAVEL", Integer.parseInt(mapField.get("CENARIO_AUTOMATIZAVEL").toString()));
            bd.atualizaCamposObrigatorios("TP_TYPE", Integer.parseInt(mapField.get("TP_TYPE").toString()));
            bd.atualizaCamposObrigatorios("TRG", Integer.parseInt(mapField.get("TRG").toString()));
            bd.atualizaCamposObrigatorios("DESCRICAO_CASO_TESTE", Integer.parseInt(mapField.get("DESCRICAO_CASO_TESTE").toString()));
            bd.atualizaCamposObrigatorios("QTD_SISTEMAS", Integer.parseInt(mapField.get("QTD_SISTEMAS").toString()));
            bd.atualizaCamposObrigatorios("PRODUTO", Integer.parseInt(mapField.get("PRODUTO").toString()));
            bd.atualizaCamposObrigatorios("SUBJECT", Integer.parseInt(mapField.get("SUBJECT").toString()));

            return true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + ex.getMessage() + ex.getLocalizedMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

    }

    public boolean atualizaUsuarioALM() {
        UsuarioALM usuarioALM = new UsuarioALM();
        usuarioALM.setUsuario(textUsuarioDB.getText());
        usuarioALM.setSenha(new String(textSenhaDB.getPassword()));

        try {
            bd.insertUsuarioAlm(usuarioALM);
            return true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + ex.getMessage() + ex.getLocalizedMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

    }

    public void carregaCamposALM() {
        try {
            UsuarioALM usuarioALM = bd.getUsuarioALM();
            textUsuarioDB.setText(usuarioALM.getUsuario());
            textSenhaDB.setText(usuarioALM.getSenha());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + ex.getMessage() + ex.getLocalizedMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void carregaCamposDb() {

        textUsuarioDB.setText(svnProperties.getUserBD());
        textSenhaDB.setText(svnProperties.getPasswordBD());

    }

    public void carregaCamposSvn() {

        textUsuarioSvn.setText(svnProperties.getUser());
        textSenhaSvn.setText(svnProperties.getPass());
        textUrlSvn.setText(svnProperties.getUrl());
        textDirSvn.setText(svnProperties.getDir(this.fase));
        textAreaSistemaSvn.setText(svnProperties.getSystems().toString());

    }

    public boolean atualizaDadosSvn() {
        try {

            svnProperties.setUser(textUsuarioSvn.getText());
            svnProperties.setPass(new String(textSenhaSvn.getPassword()));
            svnProperties.setUrl(textUrlSvn.getText());
            //svnProperties.setDir(textDirSvn.getText());
            svnProperties.setSystems(textAreaSistemaSvn.getText());
            svnProperties.setComplexidade("Muito Alto|Alto|Medio|Baixo|Muito Baixo");

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Arquivo de propriedades não foi encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    public boolean atualizaDadosDb() {
        try {

            svnProperties.setUserBD(textUsuarioDB.getText());
            svnProperties.setPasswordBD(new String(textSenhaDB.getPassword()));

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Arquivo de propriedades não foi encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Ocorreu o erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

//    public MainScreenView getDesktop() {
//        return this.desktop;
//    }
    public void setDesktop(MainScreenView desktop) {
        this.desktop = desktop;
    }
}
