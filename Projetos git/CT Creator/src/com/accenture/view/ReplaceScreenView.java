/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.accenture.view;

import com.accenture.bean.ButtonIconBean;
import com.accenture.control.ManipulaDadosSQLite;
import com.accenture.bean.TestCaseTSPropertiesBean;
import com.accenture.bean.TesteCaseTSBean;
import com.accenture.ts.rn.SvnConnectionRN;
import com.accenture.ts.rn.TestCaseTSRN;
import java.awt.Dimension;
import java.awt.Frame;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.tmatesoft.svn.core.SVNException;

/**
 *
 * @author raphael.da.silva
 */
public class ReplaceScreenView extends java.awt.Dialog {

    private InstanceScreenTSView guiInstanceCT;
    private ButtonIconBean icon;
    private int[] hashCode;
    private List<TesteCaseTSBean> listTc;

    /**
     * Creates new form GUIFiltroCT
     */
    public ReplaceScreenView(java.awt.Frame parent, boolean modal) throws SQLException, ClassNotFoundException {
        super(parent, modal);

        initComponents();

    }

    public ReplaceScreenView(final InstanceScreenTSView guiInstanceCT, java.awt.Frame parent, boolean modal, List<TesteCaseTSBean> listTc) throws IOException, ClassNotFoundException, SQLException {
        super(parent, modal);

        this.setResizable(false);
        initComponents();
        this.listTc = listTc;
        this.guiInstanceCT = guiInstanceCT;
        new SwingWorker() {
            JDialog aguarde;
            final Frame GUIPrincipal = new MainScreenView();

            {
                this.aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);
            }

            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);

                return null;
            }

            @Override
            protected void done() {
                aguarde.dispose();
            }

        }.execute();

        /*
         **Carregando os ícones dos botões:
         */
        icon = new ButtonIconBean();
        this.addIconInButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboCampos = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        textSubstituir = new javax.swing.JTextField();
        bntCancelar = new javax.swing.JButton();
        bntSubstituir = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        checkboxIncremental = new javax.swing.JCheckBox();

        setTitle("Filtro - Caso de Teste");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(380, 300));

        jLabel34.setText("SUBSTITUIR POR:");

        textSubstituir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textSubstituirFocusLost(evt);
            }
        });
        textSubstituir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textSubstituirKeyTyped(evt);
            }
        });

        bntCancelar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        bntCancelar.setText("Cancelar");
        bntCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntCancelarMouseClicked(evt);
            }
        });

        bntSubstituir.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        bntSubstituir.setText("Substituir");
        bntSubstituir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntSubstituirMouseClicked(evt);
            }
        });
        bntSubstituir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSubstituirActionPerformed(evt);
            }
        });

        jLabel51.setForeground(new java.awt.Color(51, 51, 51));
        jLabel51.setText("CAMPO:");

        checkboxIncremental.setText("Incrementar?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel51)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bntSubstituir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                                .addComponent(bntCancelar))
                            .addComponent(jComboCampos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(checkboxIncremental)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(textSubstituir))))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(textSubstituir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(checkboxIncremental)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntCancelar)
                    .addComponent(bntSubstituir))
                .addGap(16, 16, 16))
        );

        jComboCampos.addItem("Nº CENÁRIO");
        jComboCampos.addItem("Nº CASO DE TESTE");

        add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void textSubstituirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textSubstituirFocusLost


    }//GEN-LAST:event_textSubstituirFocusLost

    private void bntCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntCancelarMouseClicked
        this.dispose();
    }//GEN-LAST:event_bntCancelarMouseClicked

    private void bntSubstituirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntSubstituirMouseClicked


    }//GEN-LAST:event_bntSubstituirMouseClicked

    private void bntSubstituirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSubstituirActionPerformed
        // TODO add your handling code here:

        SwingWorker sw = new SwingWorker() {
            JDialog aguarde;
            final Frame GUIPrincipal = new MainScreenView();

            {
                this.aguarde = new WaitScreenView((JFrame) GUIPrincipal, true);
            }

            boolean filtro = false;

            @Override
            protected Object doInBackground() throws Exception {
                aguarde.setLocationRelativeTo(GUIPrincipal);
                aguarde.setVisible(true);
//                searchCT();
                replaceData();
                return null;

            }

            @Override
            protected void done() {
                aguarde.dispose();
            }
        };
        sw.execute();
        this.dispose();
    }//GEN-LAST:event_bntSubstituirActionPerformed

    private void textSubstituirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSubstituirKeyTyped
        String caracteres = "0987654321";// lista de caracters que não devem ser aceitos
        if (caracteres.contains(evt.getKeyChar() + "")) {// se o caracter que gerou o evento estiver não estiver na lista

        } else {
            evt.consume();//aciona esse propriedade para eliminar a ação do evento   
        }
    }//GEN-LAST:event_textSubstituirKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReplaceScreenView dialog = null;
                try {
                    dialog = new ReplaceScreenView(new java.awt.Frame(), true);
                } catch (SQLException ex) {
                    Logger.getLogger(ReplaceScreenView.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ReplaceScreenView.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCancelar;
    private javax.swing.JButton bntSubstituir;
    private javax.swing.JCheckBox checkboxIncremental;
    private javax.swing.JComboBox jComboCampos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField textSubstituir;
    // End of variables declaration//GEN-END:variables

    public void centralizaJanelaDialogo(InstanceScreenTSView tela) {
        Dimension d = tela.getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void addIconInButton() {

        bntCancelar.setIcon(icon.getIconBntCacelActionMinimum());
        bntSubstituir.setIcon(icon.getIconReplace());
    }

    public void loadComboTS() {

        try {
            TestCaseTSRN testCaseRN = new TestCaseTSRN();
            ArrayList<String> systems = testCaseRN.systemsTestCase();

            Collections.sort(systems, new Comparator<String>() {
                @Override
                public int compare(String t, String t1) {
                    return t.compareTo(t1);
                }
            });

            for (int i = 0; i < systems.size(); i++) {
                jComboCampos.addItem(systems.get(i).toString());
                if (systems.get(i).toString().equals("STC DADOS")) {
                    jComboCampos.addItem("STC(DADOS/VOZ)");
                }
            }

        } catch (SVNException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu o erro: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu o erro: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void replaceData() {
        String numeroCenario = "";
        String numeroCT = "";
        int hashCode = 0;
        if (textSubstituir.getText().length() < 2) {
            textSubstituir.setText("0" + textSubstituir.getText());
        }

        switch (jComboCampos.getSelectedItem().toString()) {
            case "Nº CENÁRIO":
                for (int i = 0; i < listTc.size(); i++) {
//                    if(textProcurado.getText().equals(listTc.get(i).getNumeroCenario())){
                    numeroCenario = textSubstituir.getText();
                    if (checkboxIncremental.isSelected()) {
                        numeroCenario = "" + (Integer.parseInt(numeroCenario) + i);
                        if (numeroCenario.length() < 2) {
                            numeroCenario = "0" + numeroCenario;
                        }
                    }
                    numeroCT = listTc.get(i).getNumeroCt();
                    hashCode = listTc.get(i).getHashCode();
                    guiInstanceCT.atualizaDados(hashCode, numeroCenario, numeroCT);
//                    }
                }
                break;

            case "Nº CASO DE TESTE":
                for (int i = 0; i < listTc.size(); i++) {
//                    if(textProcurado.getText().equals(listTc.get(i).getNumeroCt())){
                    numeroCenario = listTc.get(i).getNumeroCenario();
                    numeroCT = textSubstituir.getText();
                    if (checkboxIncremental.isSelected()) {
                        numeroCT = "" + (Integer.parseInt(numeroCT) + i);
                        if (numeroCT.length() < 2) {
                            numeroCT = "0" + numeroCT;
                        }
                    }
                    hashCode = listTc.get(i).getHashCode();
                    guiInstanceCT.atualizaDados(hashCode, numeroCenario, numeroCT);
//                    }
                }
                break;

        }

    }

}
