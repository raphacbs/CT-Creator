#### Usando 2 appenders, 1 para logar no console, outro para um #arquivo, 
#### ou seja, mostrar\u00e1 o log no console e salvar\u00e1 em um arquivo

log4j.rootCategory=DEBUG,stdout,fileOut,DB

# Imprime somente mensagens com 'priority' WARN ou mais alto para o #logger
#lembrando a ordem: DEBUG - INFO - WARN - ERROR - FATAL

log4j.category.com.accenture.alm = ERROR
log4j.category.com.accenture.alm = INFO
log4j.category.com.accenture.alm = DEBUG
log4j.category.com.accenture.control = DEBUG
log4j.category.com.accenture.GUI = INFO

log4j.category.com.accenture.view = ERROR
log4j.category.com.accenture.view = INFO
log4j.category.com.accenture.view = DEBUG

log4j.category.com.accenture.ts.rn = ERROR
log4j.category.com.accenture.ts.rn = INFO
log4j.category.com.accenture.ts.rn = DEBUG

log4j.category.com.accenture.ts.dao = ERROR
log4j.category.com.accenture.ts.dao = INFO
#log4j.category.com.accenture.ts.dao = DEBUG



#### O primeiro appender escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
### Pattern que mostra o nome do arquivo e numero da linha, porem #sem data e hora
#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
log4j.appender.stdout.layout.ConversionPattern=Log %x: %d{dd/MM/yyyy HH:mm:ss,SSS} - %5p [%t] (%F:%L) - %m%n
#### O segundo appender escreve em um arquivo e faz um bkp ao #atingir o max 
#log4j.appender.fileOut = org.apache.log4j.RollingFileAppender
log4j.appender.fileOut=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=LOG.log
log4j.appender.fileOut.File=log.log

### Controla o tamanho maximo do arquivo
log4j.appender.fileOut.MaxFileSize=10000KB
### Faz backup dos arquivos de log (apenas 1)
log4j.appender.fileOut.MaxBackupIndex=1
log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout
#####este formato esta em ingles: 2011-04-24 e imprime o nro da #linha L
log4j.appender.fileOut.layout.ConversionPattern=Log %x: %d{dd/MM/yyyy HH:mm:ss,SSS} - %5p [%t] (%F:%L) - %m%n
####imprime no formato dia/mes/ano 
#log4j.appender.fileOut.layout.ConversionPattern=%-2d{dd/MM/yy HH:mm} [%t] %5p %c:%L - %m%n

## Define the DB appender
log4j.appender.DB=org.apache.log4j.jdbc.JDBCAppender
## Set JDBC URL
#Database name i mentioned here as test1
log4j.appender.DB.URL=jdbc:sqlserver://localhost:1433;DatabaseName=CT_CREATOR_DB_DEV
## Set Database Driver
log4j.appender.DB.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
## Set database user name and password
log4j.appender.DB.user=sa
log4j.appender.DB.password=sa
#
## Set the SQL statement to be executed.
log4j.appender.DB.sql=INSERT INTO Log([UserId],[Class],[Level],[Message],[Trace]) VALUES('${user.name}','%F:%L','%p','%m','%throwable{short.message}')
#
## Define the layout for file appender
log4j.appender.DB.layout=org.apache.log4j.PatternLayout
#
#